<?xml version="1.0" encoding="UTF-8" ?>

<Form version="1.3" maxVersion="1.8" type="org.netbeans.modules.form.forminfo.JPanelFormInfo">
  <AuxValues>
    <AuxValue name="FormSettings_autoResourcing" type="java.lang.Integer" value="0"/>
    <AuxValue name="FormSettings_autoSetComponentName" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_generateFQN" type="java.lang.Boolean" value="true"/>
    <AuxValue name="FormSettings_generateMnemonicsCode" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_i18nAutoMode" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_layoutCodeTarget" type="java.lang.Integer" value="1"/>
    <AuxValue name="FormSettings_listenerGenerationStyle" type="java.lang.Integer" value="0"/>
    <AuxValue name="FormSettings_variablesLocal" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_variablesModifier" type="java.lang.Integer" value="2"/>
  </AuxValues>

  <Layout>
    <DimensionLayout dim="0">
      <Group type="103" groupAlignment="0" attributes="0">
          <Group type="102" alignment="1" attributes="0">
              <EmptySpace min="-2" pref="13" max="-2" attributes="0"/>
              <Component id="jScrollPane1" pref="375" max="32767" attributes="0"/>
              <EmptySpace min="-2" max="-2" attributes="0"/>
          </Group>
      </Group>
    </DimensionLayout>
    <DimensionLayout dim="1">
      <Group type="103" groupAlignment="0" attributes="0">
          <Group type="102" alignment="0" attributes="0">
              <EmptySpace min="-2" pref="13" max="-2" attributes="0"/>
              <Component id="jScrollPane1" min="-2" pref="255" max="-2" attributes="0"/>
              <EmptySpace pref="32" max="32767" attributes="0"/>
          </Group>
      </Group>
    </DimensionLayout>
  </Layout>
  <SubComponents>
    <Container class="javax.swing.JScrollPane" name="jScrollPane1">
      <AuxValues>
        <AuxValue name="autoScrollPane" type="java.lang.Boolean" value="true"/>
      </AuxValues>

      <Layout class="org.netbeans.modules.form.compat2.layouts.support.JScrollPaneSupportLayout"/>
      <SubComponents>
        <Component class="javax.swing.JTable" name="trackingTable">
          <Properties>
            <Property name="model" type="javax.swing.table.TableModel" editor="org.netbeans.modules.form.RADConnectionPropertyEditor">
              <Connection code="defaultTableModel" type="code"/>
            </Property>
          </Properties>
          <Events>
            <EventHandler event="mouseClicked" listener="java.awt.event.MouseListener" parameters="java.awt.event.MouseEvent" handler="trackingTableMouseClicked"/>
            <EventHandler event="mousePressed" listener="java.awt.event.MouseListener" parameters="java.awt.event.MouseEvent" handler="trackingTableMousePressed"/>
          </Events>
          <AuxValues>
            <AuxValue name="JavaCodeGenerator_InitCodePost" type="java.lang.String" value="setSize(new Dimension(Toolkit.getDefaultToolkit().getScreenSize().width, Toolkit.getDefaultToolkit().getScreenSize().height));&#xa;        TableColumn testColumn = this.trackingTable.getColumnModel().getColumn(0);&#xa;        testColumn.setWidth(40);&#xa;        testColumn.setMinWidth(40);&#xa;        testColumn.setMaxWidth(40);&#xa;        TableColumn expBusColumn = this.trackingTable.getColumnModel().getColumn(11);&#xa;        expBusColumn.setWidth(0);&#xa;        expBusColumn.setMinWidth(0);&#xa;        expBusColumn.setMaxWidth(0);&#xa;        TableColumn regionColumn = this.trackingTable.getColumnModel().getColumn(12);&#xa;        regionColumn.setWidth(0);&#xa;        regionColumn.setMinWidth(0);&#xa;        regionColumn.setMaxWidth(0);&#xa;        TableColumn compSapceClmn = this.trackingTable.getColumnModel().getColumn(13);&#xa;        compSapceClmn.setWidth(0);&#xa;        compSapceClmn.setMinWidth(0);&#xa;        compSapceClmn.setMaxWidth(0);&#xa;&#xa;        TableColumn soluSapceClmn = this.trackingTable.getColumnModel().getColumn(14);&#xa;        soluSapceClmn.setWidth(0);&#xa;        soluSapceClmn.setMinWidth(0);&#xa;        soluSapceClmn.setMaxWidth(0);&#xa;&#xa;        TableColumn ourChrgsClmn = this.trackingTable.getColumnModel().getColumn(15);&#xa;        ourChrgsClmn.setWidth(0);&#xa;        ourChrgsClmn.setMinWidth(0);&#xa;        ourChrgsClmn.setMaxWidth(0);&#xa;&#xa;        TableColumn typeColumn = this.trackingTable.getColumnModel().getColumn(2);&#xa;        typeColumn.setWidth(200);&#xa;        typeColumn.setMinWidth(200);&#xa;        typeColumn.setMaxWidth(200);&#xa;        TableColumn tableColumn1 = trackingTable.getColumnModel().getColumn(1);&#xa;        tableColumn1.setCellEditor(new DefaultCellEditor(statusCombo));&#xa;&#xa;        TableColumn col4 = trackingTable.getColumnModel().getColumn(8);&#xa;        col4.setMaxWidth(40);&#xa;        col4.setCellRenderer(new IconTableCellRenderer(&quot;Edit&quot;));&#xa;        TableColumn col5 = trackingTable.getColumnModel().getColumn(9);&#xa;        col5.setMaxWidth(40);&#xa;        col5.setCellRenderer(new IconTableCellRenderer(&quot;View&quot;));&#xa;&#xa;        TableColumn col9 = trackingTable.getColumnModel().getColumn(10);&#xa;        col9.setMaxWidth(40);&#xa;        col9.setCellRenderer(new IconTableCellRenderer(&quot;Copy&quot;));&#xa;&#xa;        if (!&quot;Opportunity Lost&quot;.equalsIgnoreCase(accName.split(&quot;,&quot;)[0])) {&#xa;            TableColumn copyColumn = trackingTable.getColumnModel().getColumn(11);&#xa;            copyColumn.setWidth(0);&#xa;            copyColumn.setMinWidth(0);&#xa;            copyColumn.setMaxWidth(0);&#xa;        }"/>
            <AuxValue name="JavaCodeGenerator_InitCodePre" type="java.lang.String" value="ParserCaller caller = new ParserCaller();&#xa;&#xa;        HashMap&lt;String, String&gt; resultEventMap = null;&#xa;        Iterator it = caller.parseTrackingDetails(email, accName.split(&quot;,&quot;)[0]).iterator();&#xa;          while (it.hasNext()) {&#xa;            resultEventMap = (HashMap&lt;String, String&gt;) it.next();&#xa;            System.out.println(&quot;in while loop &quot; + resultEventMap.size());&#xa;            if (resultEventMap.size() &gt; 0) {&#xa;&#xa;                Vector data = new Vector();&#xa;&#xa;                System.out.println(resultEventMap.get(&quot;txId&quot;));&#xa;                System.out.println(accName.split(&quot;,&quot;)[0]);&#xa;                System.out.println(resultEventMap.get(&quot;type&quot;));&#xa;                System.out.println(resultEventMap.get(&quot;client&quot;));&#xa;                System.out.println(&quot;exp business: &quot; + resultEventMap.get(&quot;expBusiness&quot;));&#xa;                if (SingletonClass.designation.equalsIgnoreCase(&quot;Credit Analyst&quot;)) {&#xa;&#xa;                    System.out.println(resultEventMap.get(&quot;Credit Analyst status: &quot; + accName));&#xa;&#xa;&#xa;                    if (accName.split(&quot;,&quot;)[0].equalsIgnoreCase(&quot;Identification Of Client&quot;)&#xa;                            || accName.split(&quot;,&quot;)[0].equalsIgnoreCase(&quot;Awaiting Internal Approval&quot;)&#xa;                            || accName.split(&quot;,&quot;)[0].equalsIgnoreCase(&quot;Send Offer Letter&quot;)&#xa;                            || accName.split(&quot;,&quot;)[0].equalsIgnoreCase(&quot;Awaiting Client Approval&quot;)&#xa;                            || accName.split(&quot;,&quot;)[0].equalsIgnoreCase(&quot;Awaiting Mandate&quot;)) {&#xa;&#xa;                        if (!&quot;New Solution&quot;.equalsIgnoreCase(resultEventMap.get(&quot;type&quot;)) &amp;&amp; !&quot;Existing-New Solution&quot;.equalsIgnoreCase(resultEventMap.get(&quot;type&quot;))) {&#xa;                            data.add(resultEventMap.get(&quot;txId&quot;));&#xa;                            data.add(accName.split(&quot;,&quot;)[0]);&#xa;                            data.add(resultEventMap.get(&quot;type&quot;));&#xa;                            data.add(resultEventMap.get(&quot;client&quot;));&#xa;                            data.add(resultEventMap.get(&quot;beneficiary&quot;));&#xa;                            data.add(resultEventMap.get(&quot;bank&quot;));&#xa;&#xa;&#xa;                            if (accName.split(&quot;,&quot;)[0].equalsIgnoreCase(&quot;Identification Of Client&quot;)&#xa;                                    || accName.split(&quot;,&quot;)[0].equalsIgnoreCase(&quot;Awaiting Internal Approval&quot;)&#xa;                                    || accName.split(&quot;,&quot;)[0].equalsIgnoreCase(&quot;Send Offer Letter&quot;)&#xa;                                    || accName.split(&quot;,&quot;)[0].equalsIgnoreCase(&quot;Awaiting Client Approval&quot;)&#xa;                                    || accName.split(&quot;,&quot;)[0].equalsIgnoreCase(&quot;Awaiting Mandate&quot;)&#xa;                                    || accName.split(&quot;,&quot;)[0].equalsIgnoreCase(&quot;Awaiting Documents&quot;)) {&#xa;&#xa;                                data.add(resultEventMap.get(&quot;expBusiness&quot;));&#xa;                            } else if (accName.split(&quot;,&quot;)[0].equalsIgnoreCase(&quot;Create Limit&quot;)&#xa;                                    || accName.split(&quot;,&quot;)[0].equalsIgnoreCase(&quot;Awaiting Limit Setup&quot;)) {&#xa;                                data.add(resultEventMap.get(&quot;amount&quot;));&#xa;&#xa;                            } else {&#xa;&#xa;                                data.add(resultEventMap.get(&quot;limitSanctioned&quot;));&#xa;&#xa;                            }&#xa;&#xa;&#xa;                            data.add(resultEventMap.get(&quot;rmName&quot;));&#xa;                            data.add(resultEventMap.get(&quot;&quot;));&#xa;                            data.add(resultEventMap.get(&quot;&quot;));&#xa;                            data.add(resultEventMap.get(&quot;&quot;));&#xa;                            data.add(resultEventMap.get(&quot;expBusiness&quot;));&#xa;                            data.add(resultEventMap.get(&quot;region&quot;));&#xa;                            data.add(resultEventMap.get(&quot;compSpace&quot;));&#xa;                            data.add(resultEventMap.get(&quot;solution&quot;));&#xa;                            columData.add(data);&#xa;                        }&#xa;                    } else {&#xa;                        data.add(resultEventMap.get(&quot;txId&quot;));&#xa;                        data.add(accName.split(&quot;,&quot;)[0]);&#xa;                        data.add(resultEventMap.get(&quot;type&quot;));&#xa;                        data.add(resultEventMap.get(&quot;client&quot;));&#xa;                        data.add(resultEventMap.get(&quot;beneficiary&quot;));&#xa;                        data.add(resultEventMap.get(&quot;bank&quot;));&#xa;                        if (accName.split(&quot;,&quot;)[0].equalsIgnoreCase(&quot;Identification Of Client&quot;)&#xa;                                || accName.split(&quot;,&quot;)[0].equalsIgnoreCase(&quot;Awaiting Internal Approval&quot;)&#xa;                                || accName.split(&quot;,&quot;)[0].equalsIgnoreCase(&quot;Send Offer Letter&quot;)&#xa;                                || accName.split(&quot;,&quot;)[0].equalsIgnoreCase(&quot;Awaiting Client Approval&quot;)&#xa;                                || accName.split(&quot;,&quot;)[0].equalsIgnoreCase(&quot;Awaiting Mandate&quot;)&#xa;                                || accName.split(&quot;,&quot;)[0].equalsIgnoreCase(&quot;Awaiting Documents&quot;)) {&#xa;&#xa;                            data.add(resultEventMap.get(&quot;expBusiness&quot;));&#xa;                        } else if (accName.split(&quot;,&quot;)[0].equalsIgnoreCase(&quot;Create Limit&quot;)&#xa;                                || accName.split(&quot;,&quot;)[0].equalsIgnoreCase(&quot;Awaiting Limit Setup&quot;)) {&#xa;                            data.add(resultEventMap.get(&quot;amount&quot;));&#xa;&#xa;                        } else {&#xa;&#xa;                            data.add(resultEventMap.get(&quot;limitSanctioned&quot;));&#xa;&#xa;                        }&#xa;&#xa;                            data.add(resultEventMap.get(&quot;rmName&quot;));&#xa;                        data.add(resultEventMap.get(&quot;&quot;));&#xa;                        data.add(resultEventMap.get(&quot;&quot;));&#xa;                        data.add(resultEventMap.get(&quot;&quot;));&#xa;                        data.add(resultEventMap.get(&quot;expBusiness&quot;));&#xa;                        data.add(resultEventMap.get(&quot;region&quot;));&#xa;                        data.add(resultEventMap.get(&quot;compSpace&quot;));&#xa;                        data.add(resultEventMap.get(&quot;solution&quot;));&#xa;                        columData.add(data);&#xa;                    }&#xa;                } else {&#xa;                    data.add(resultEventMap.get(&quot;txId&quot;));&#xa;                    data.add(accName.split(&quot;,&quot;)[0]);&#xa;                    data.add(resultEventMap.get(&quot;type&quot;));&#xa;                    data.add(resultEventMap.get(&quot;client&quot;));&#xa;                    data.add(resultEventMap.get(&quot;beneficiary&quot;));&#xa;                    data.add(resultEventMap.get(&quot;bank&quot;));&#xa;                    if (accName.split(&quot;,&quot;)[0].equalsIgnoreCase(&quot;Identification Of Client&quot;)&#xa;                            || accName.split(&quot;,&quot;)[0].equalsIgnoreCase(&quot;Awaiting Internal Approval&quot;)&#xa;                            || accName.split(&quot;,&quot;)[0].equalsIgnoreCase(&quot;Send Offer Letter&quot;)&#xa;                            || accName.split(&quot;,&quot;)[0].equalsIgnoreCase(&quot;Awaiting Client Approval&quot;)&#xa;                            || accName.split(&quot;,&quot;)[0].equalsIgnoreCase(&quot;Awaiting Mandate&quot;)&#xa;                            || accName.split(&quot;,&quot;)[0].equalsIgnoreCase(&quot;Awaiting Documents&quot;)) {&#xa;&#xa;                        data.add(resultEventMap.get(&quot;expBusiness&quot;));&#xa;                    } else if (accName.split(&quot;,&quot;)[0].equalsIgnoreCase(&quot;Create Limit&quot;)&#xa;                            || accName.split(&quot;,&quot;)[0].equalsIgnoreCase(&quot;Awaiting Limit Setup&quot;)) {&#xa;                        data.add(resultEventMap.get(&quot;amount&quot;));&#xa;&#xa;                    } else {&#xa;&#xa;                        data.add(resultEventMap.get(&quot;limitSanctioned&quot;));&#xa;&#xa;                    }&#xa;&#xa;                            data.add(resultEventMap.get(&quot;rmName&quot;));&#xa;                    data.add(resultEventMap.get(&quot;&quot;));&#xa;                    data.add(resultEventMap.get(&quot;&quot;));&#xa;                    data.add(resultEventMap.get(&quot;&quot;));&#xa;                    data.add(resultEventMap.get(&quot;expBusiness&quot;));&#xa;                    data.add(resultEventMap.get(&quot;region&quot;));&#xa;                    data.add(resultEventMap.get(&quot;compSpace&quot;));&#xa;                    data.add(resultEventMap.get(&quot;solution&quot;));&#xa;                    data.add(resultEventMap.get(&quot;ourCharges&quot;));&#xa;                    columData.add(data);&#xa;                }&#xa;            }&#xa;&#xa;        }&#xa;&#xa;&#xa;//            statusCombo.addItem(&quot;Identification Of Client&quot;);&#xa;//            statusCombo.addItem(&quot;Awaiting Internal Approval&quot;);&#xa;//            statusCombo.addItem(&quot;Send Offer Letter&quot;);&#xa;//            statusCombo.addItem(&quot;Awaiting Client Approval&quot;);&#xa;//            statusCombo.addItem(&quot;Awaiting Maindate&quot;);&#xa;//            statusCombo.addItem(&quot;Awaiting Documents&quot;);&#xa;//            statusCombo.addItem(&quot;Create Limit&quot;);&#xa;//            statusCombo.addItem(&quot;Awaiting Limit Setup&quot;);&#xa;//            statusCombo.addItem(&quot;Limit Sanctioned&quot;);&#xa;//            statusCombo.addItem(&quot;Portfolio Client&quot;);&#xa;//            statusCombo.addItem(&quot;Expiry Transition&quot;);&#xa;//            statusCombo.addItem(&quot;Opportunity Lost&quot;);&#xa;        head.add(&quot;TxId&quot;);&#xa;        head.add(&quot;Status&quot;);&#xa;        head.add(&quot;Type&quot;);&#xa;        head.add(&quot;Client&quot;);&#xa;        head.add(&quot;Beneficiery&quot;);&#xa;        head.add(&quot;Bank&quot;);&#xa;&#xa;            if(accName.split(&quot;,&quot;)[0].equalsIgnoreCase(&quot;Identification Of Client&quot;)||&#xa;            accName.split(&quot;,&quot;)[0].equalsIgnoreCase(&quot;Awaiting Internal Approval&quot;)||&#xa;            accName.split(&quot;,&quot;)[0].equalsIgnoreCase(&quot;Send Offer Letter&quot;)||&#xa;            accName.split(&quot;,&quot;)[0].equalsIgnoreCase(&quot;Awaiting Client Approval&quot;)||&#xa;            accName.split(&quot;,&quot;)[0].equalsIgnoreCase(&quot;Awaiting Mandate&quot;)||&#xa;            accName.split(&quot;,&quot;)[0].equalsIgnoreCase(&quot;Awaiting Documents&quot;))&#xa;&#xa;&#xa;{&#xa;&#xa;        head.add(&quot;Expected Business&quot;);&#xa;}else if(accName.split(&quot;,&quot;)[0].equalsIgnoreCase(&quot;Create Limit&quot;)||&#xa;            accName.split(&quot;,&quot;)[0].equalsIgnoreCase(&quot;Awaiting Limit Setup&quot;))&#xa;&#xa;&#xa;{&#xa;        head.add(&quot;Proposal Limit&quot;);&#xa;&#xa;}else{&#xa;        head.add(&quot;Sanctioned Limit&quot;);&#xa;&#xa;}&#xa;        head.add(&quot;RM Name&quot;);&#xa;        head.add(&quot;&quot;);&#xa;        head.add(&quot;&quot;);&#xa;        head.add(&quot;&quot;);&#xa;        head.add(&quot;&quot;);&#xa;        head.add(&quot;&quot;);&#xa;        head.add(&quot;&quot;);&#xa;        head.add(&quot;&quot;);&#xa;        head.add(&quot;&quot;);&#xa;&#xa;        JTableHeader header = trackingTable.getTableHeader();&#xa;        header.setBackground(new Color(192, 191, 200));&#xa;        header.setPreferredSize(new Dimension(1024, 30));&#xa;        Font font = new Font(&quot;Serif&quot;, 1, 14);&#xa;        header.setForeground(new Color(0, 103, 204));&#xa;        header.setFont(font);&#xa;&#xa;        trackingTable.setRowHeight(30);&#xa;        trackingTable.setAutoResizeMode(2);&#xa;        DefaultTableModel defaultTableModel = new DefaultTableModel(columData, head);&#xa;trackingTable.setAutoCreateRowSorter(true);&#xa;//        TableRowSorter&lt;TableModel&gt; sorter = new TableRowSorter&lt;TableModel&gt;(defaultTableModel);&#xa;//        trackingTable.setRowSorter(sorter);&#xa;//        final Comparator&lt;Object&gt; ascendingColumn0 = new Comparator&lt;Object&gt;() {&#xa;//            @Override&#xa;//            public int compare(Object o1, Object o2) {&#xa;//                if (o1 instanceof NoSort&lt;?&gt; || o2 instanceof NoSort&lt;?&gt;) {&#xa;//                    //maintain order&#xa;//                    return -1;&#xa;//                }&#xa;//&#xa;//                Integer int1 = (Integer) o1;&#xa;//                Integer int2 = (Integer) o2;&#xa;//&#xa;//                return int1.compareTo(int2);&#xa;//            }&#xa;//        };&#xa;//&#xa;//sorter.setComparator(0, ascendingColumn0);&#xa;//sorter.toggleSortOrder(0);"/>
          </AuxValues>
        </Component>
      </SubComponents>
    </Container>
  </SubComponents>
</Form>
